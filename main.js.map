{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/language-selector/language-selector.component.html","webpack:///./src/app/components/language-selector/language-selector.component.scss","webpack:///./src/app/components/language-selector/language-selector.component.ts","webpack:///./src/app/components/new-question-page/new-question-page.component.html","webpack:///./src/app/components/new-question-page/new-question-page.component.scss","webpack:///./src/app/components/new-question-page/new-question-page.component.ts","webpack:///./src/app/components/poll-result/poll-result.component.html","webpack:///./src/app/components/poll-result/poll-result.component.scss","webpack:///./src/app/components/poll-result/poll-result.component.ts","webpack:///./src/app/components/pool-action-element/pool-action-element.component.html","webpack:///./src/app/components/pool-action-element/pool-action-element.component.scss","webpack:///./src/app/components/pool-action-element/pool-action-element.component.ts","webpack:///./src/app/components/pool-actions/pool-actions.component.html","webpack:///./src/app/components/pool-actions/pool-actions.component.scss","webpack:///./src/app/components/pool-actions/pool-actions.component.ts","webpack:///./src/app/components/pool-settings/pool-settings.component.html","webpack:///./src/app/components/pool-settings/pool-settings.component.scss","webpack:///./src/app/components/pool-settings/pool-settings.component.ts","webpack:///./src/app/components/pool-summary/pool-summary.component.html","webpack:///./src/app/components/pool-summary/pool-summary.component.scss","webpack:///./src/app/components/pool-summary/pool-summary.component.ts","webpack:///./src/app/components/pool-tile/pool-tile.component.html","webpack:///./src/app/components/pool-tile/pool-tile.component.scss","webpack:///./src/app/components/pool-tile/pool-tile.component.ts","webpack:///./src/app/components/pool/pool.component.html","webpack:///./src/app/components/pool/pool.component.scss","webpack:///./src/app/components/pool/pool.component.ts","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.scss","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/nos-wrapper/services/nos-api.service.ts","webpack:///./src/app/pages/about-page/about-page.component.html","webpack:///./src/app/pages/about-page/about-page.component.scss","webpack:///./src/app/pages/about-page/about-page.component.ts","webpack:///./src/app/pages/changelog-page/changelog-page.component.html","webpack:///./src/app/pages/changelog-page/changelog-page.component.scss","webpack:///./src/app/pages/changelog-page/changelog-page.component.ts","webpack:///./src/app/pages/contact-list-page/contact-list-page.component.html","webpack:///./src/app/pages/contact-list-page/contact-list-page.component.scss","webpack:///./src/app/pages/contact-list-page/contact-list-page.component.ts","webpack:///./src/app/pages/create-pool-process-page/create-pool-process-page.component.html","webpack:///./src/app/pages/create-pool-process-page/create-pool-process-page.component.scss","webpack:///./src/app/pages/create-pool-process-page/create-pool-process-page.component.ts","webpack:///./src/app/pages/home-page/home-page.component.html","webpack:///./src/app/pages/home-page/home-page.component.scss","webpack:///./src/app/pages/home-page/home-page.component.ts","webpack:///./src/app/pages/page-not-found/page-not-found.component.html","webpack:///./src/app/pages/page-not-found/page-not-found.component.scss","webpack:///./src/app/pages/page-not-found/page-not-found.component.ts","webpack:///./src/app/pages/page-skelet/page-skelet.component.html","webpack:///./src/app/pages/page-skelet/page-skelet.component.scss","webpack:///./src/app/pages/page-skelet/page-skelet.component.ts","webpack:///./src/app/pages/polls-result/polls-result.component.html","webpack:///./src/app/pages/polls-result/polls-result.component.scss","webpack:///./src/app/pages/polls-result/polls-result.component.ts","webpack:///./src/app/pages/pool-fill-page/pool-fill-page.component.html","webpack:///./src/app/pages/pool-fill-page/pool-fill-page.component.scss","webpack:///./src/app/pages/pool-fill-page/pool-fill-page.component.ts","webpack:///./src/app/pages/pools-page/pools-page.component.html","webpack:///./src/app/pages/pools-page/pools-page.component.scss","webpack:///./src/app/pages/pools-page/pools-page.component.ts","webpack:///./src/app/pages/profile-page/profile-page.component.html","webpack:///./src/app/pages/profile-page/profile-page.component.scss","webpack:///./src/app/pages/profile-page/profile-page.component.ts","webpack:///./src/app/pages/public-pools-page/public-pools-page.component.html","webpack:///./src/app/pages/public-pools-page/public-pools-page.component.scss","webpack:///./src/app/pages/public-pools-page/public-pools-page.component.ts","webpack:///./src/app/pages/splash-screen-page/splash-screen-page.component.html","webpack:///./src/app/pages/splash-screen-page/splash-screen-page.component.scss","webpack:///./src/app/pages/splash-screen-page/splash-screen-page.component.ts","webpack:///./src/app/shared/Methods.ts","webpack:///./src/app/shared/contact/contact.service.ts","webpack:///./src/app/shared/helper.ts","webpack:///./src/app/shared/localizationDatePipe/localization-date-pipe.pipe.ts","webpack:///./src/app/shared/pools/pollListTypes.ts","webpack:///./src/app/shared/pools/pool-resolver.service.ts","webpack:///./src/app/shared/pools/pools.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n  address;\n\n  constructor(private _translateService: TranslateService) {\n    _translateService.addLangs(['sk', 'en']);\n    _translateService.setDefaultLang('en');\n\n    // const browserLang = this._translateService.getBrowserLang();\n    _translateService.use('en');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {appRoutes} from './app.routes';\nimport {RouterModule} from '@angular/router';\nimport {HttpClient, HttpClientModule, HttpHandler} from '@angular/common/http';\nimport {TranslateModule, TranslateLoader, MissingTranslationHandler, TranslateService} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\n\nimport { AppComponent } from './app.component';\nimport { PageSkeletComponent } from './pages/page-skelet/page-skelet.component';\nimport { HomePageComponent } from './pages/home-page/home-page.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { PoolActionsComponent } from './components/pool-actions/pool-actions.component';\nimport { PoolActionElementComponent } from './components/pool-action-element/pool-action-element.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { NewQuestionPageComponent } from './components/new-question-page/new-question-page.component';\nimport {\n  MatButtonModule,\n  MatCheckboxModule, MatDatepickerModule, MatIconModule,\n  MatRadioModule,\n  MatSelectModule,\n  MatSlideToggleModule,\n  MatStepperModule,\n  NativeDateAdapter,\n  DateAdapter,\n  MatNativeDateModule, MatFormFieldModule, MatInputModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { PoolSummaryComponent } from './components/pool-summary/pool-summary.component';\nimport { CreatePoolProcessPageComponent } from './pages/create-pool-process-page/create-pool-process-page.component';\nimport { SplashScreenPageComponent } from './pages/splash-screen-page/splash-screen-page.component';\nimport { ContactListPageComponent } from './pages/contact-list-page/contact-list-page.component';\nimport { PoolsPageComponent } from './pages/pools-page/pools-page.component';\nimport { PoolTileComponent } from './components/pool-tile/pool-tile.component';\nimport { PublicPoolsPageComponent } from './pages/public-pools-page/public-pools-page.component';\nimport { PoolFillPageComponent } from './pages/pool-fill-page/pool-fill-page.component';\nimport { PoolComponent } from './components/pool/pool.component';\nimport { ProfilePageComponent } from './pages/profile-page/profile-page.component';\nimport { AboutPageComponent } from './pages/about-page/about-page.component';\nimport { ChangelogPageComponent } from './pages/changelog-page/changelog-page.component';\nimport { LanguageSelectorComponent } from './components/language-selector/language-selector.component';\nimport { PoolSettingsComponent } from './components/pool-settings/pool-settings.component';\nimport {LocalizedDatePipe} from './shared/localizationDatePipe/localization-date-pipe.pipe';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeSk from '@angular/common/locales/sk';\nimport { PollsResultPageComponent } from './pages/polls-result/polls-result.component';\nimport { PollResultComponent } from './components/poll-result/poll-result.component';\n\nregisterLocaleData(localeSk);\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  // return new TranslateHttpLoader(http);\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageSkeletComponent,\n    HomePageComponent,\n    PageNotFoundComponent,\n    HeaderComponent,\n    ProfileComponent,\n    PoolActionsComponent,\n    PoolActionElementComponent,\n    NewQuestionPageComponent,\n    PoolSummaryComponent,\n    CreatePoolProcessPageComponent,\n    SplashScreenPageComponent,\n    ContactListPageComponent,\n    PoolsPageComponent,\n    PoolTileComponent,\n    PublicPoolsPageComponent,\n    PoolFillPageComponent,\n    PoolComponent,\n    ProfilePageComponent,\n    AboutPageComponent,\n    ChangelogPageComponent,\n    LanguageSelectorComponent,\n    PoolSettingsComponent,\n    LocalizedDatePipe,\n    PollsResultPageComponent,\n    PollResultComponent\n  ],\n  imports: [\n    NgbModule.forRoot(),\n    MatSlideToggleModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatRadioModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    RouterModule.forRoot(appRoutes, { useHash: true }),\n    HttpClientModule,\n    FormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  providers: [\n    {\n      provide: DateAdapter, useClass: NativeDateAdapter\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {Routes} from '@angular/router';\nimport {PageNotFoundComponent} from './pages/page-not-found/page-not-found.component';\nimport {PageSkeletComponent} from './pages/page-skelet/page-skelet.component';\nimport {PoolActionsComponent} from './components/pool-actions/pool-actions.component';\nimport {CreatePoolProcessPageComponent} from './pages/create-pool-process-page/create-pool-process-page.component';\nimport {ContactListPageComponent} from './pages/contact-list-page/contact-list-page.component';\nimport {PoolsPageComponent} from './pages/pools-page/pools-page.component';\nimport {PublicPoolsPageComponent} from './pages/public-pools-page/public-pools-page.component';\nimport {PoolFillPageComponent} from './pages/pool-fill-page/pool-fill-page.component';\nimport {PoolResolver} from './shared/pools/pool-resolver.service';\nimport {ProfilePageComponent} from './pages/profile-page/profile-page.component';\nimport {AboutPageComponent} from './pages/about-page/about-page.component';\nimport {ChangelogPageComponent} from './pages/changelog-page/changelog-page.component';\nimport { PollListTypes } from './shared/pools/pollListTypes';\nimport { PollsResultPageComponent } from './pages/polls-result/polls-result.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: PageSkeletComponent,\n    children: [\n      {\n        path: '',\n        component: PoolActionsComponent,\n      },\n      {\n        path: 'create',\n        component: CreatePoolProcessPageComponent,\n      },\n      {\n        path: 'contacts',\n        component: ContactListPageComponent\n      },\n      {\n        path: 'pools',\n        component: PoolsPageComponent,\n        data: { type: PollListTypes.PRIVATE_LIST }\n      },\n      {\n        path: 'ownPools',\n        component: PoolsPageComponent,\n        data: { type: PollListTypes.OWN_LIST }\n      },\n      {\n        path: 'publicpools',\n        component: PublicPoolsPageComponent\n      },\n      {\n        path: 'pool/:id',\n        component: PoolFillPageComponent,\n        resolve: {pool: PoolResolver}\n      },\n      {\n        path: 'result/:id',\n        component: PollsResultPageComponent,\n        resolve: {pool: PoolResolver}\n      },\n      {\n        path: 'profile',\n        component: ProfilePageComponent\n      }\n    ]\n    // data: { title: 'Heroes List' }\n  },\n  {\n    path: 'about',\n    component: AboutPageComponent\n  },\n  {\n    path: 'changelog',\n    component: ChangelogPageComponent\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-7 menu\\\">\\n      <div class=\\\"logo-wrapper\\\">\\n        <img routerLink=\\\"/\\\" class=\\\"logo\\\" src=\\\"assets/img/voteologobiele.png\\\">\\n      </div>\\n      <!--<span  class=\\\"item\\\">{{'header.profile' | translate}}</span>-->\\n      <span routerLink=\\\"/contacts\\\" class=\\\"item\\\">{{'header.contactList' | translate}}</span>\\n      <span routerLink=\\\"/changelog\\\" class=\\\"item\\\">Changelog</span>\\n      <span routerLink=\\\"/about\\\" class=\\\"item\\\">{{'header.about' | translate}}<span class=\\\"gold\\\">{{'header.title' | translate}}</span></span>\\n    </div>\\n\\n    <div class=\\\"col-4\\\">\\n      <div routerLink=\\\"/profile\\\" class=\\\"user\\\">\\n        <span class=\\\"gold\\\">Kamil bitcoach</span>\\n        <span class=\\\"address\\\">{{address}}</span>\\n      </div>\\n    </div>\\n    <div class=\\\"col-1 menu\\\">\\n      <app-language-selector\\n        [languages]=\\\"languages\\\"\\n        [selectedLanguage]=\\\"selectedLanguage\\\"\\n        (onSelectChange)=\\\"changeLanguage($event)\\\">\\n      </app-language-selector>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".logo-wrapper {\\n  float: left;\\n  margin: 5px 35px 5px 15px;\\n  cursor: pointer; }\\n  .logo-wrapper .name {\\n    font-size: 32px;\\n    color: #e1ab05; }\\n  .gold {\\n  color: #e1ab05; }\\n  .menu {\\n  display: flex;\\n  align-items: center;\\n  color: white; }\\n  .item {\\n  cursor: pointer;\\n  font-size: 18px;\\n  padding: 10px 25px; }\\n  .item:hover {\\n    color: #a1d0c5; }\\n  .user {\\n  display: flex;\\n  flex-direction: column;\\n  float: right;\\n  padding-right: 10px;\\n  height: 100%;\\n  position: relative;\\n  justify-content: center;\\n  cursor: pointer; }\\n  .user span {\\n    text-align: left; }\\n  .bitcoach-menu {\\n  display: flex;\\n  align-items: center; }\\n  .wrapper {\\n  color: #fff;\\n  width: 100%;\\n  height: 60px;\\n  background: linear-gradient(to right, #303d90, #09245d); }\\n  .col-4, span {\\n  outline: none !important; }\\n  mat-select {\\n  border: 0px; }\\n  mat-form-field {\\n  display: block; }\\n  mat-form-field .mat-select-value-text {\\n    color: #fff !important; }\\n  .language {\\n  margin: auto; }\\n  .language-wrapper {\\n  margin: auto;\\n  display: inline-block; }\\n  .logo {\\n  height: 50px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PoolsService} from '../../shared/pools/pools.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  languages = [\n    'sk', 'en'\n  ];\n\n  selectedLanguage;\n\n  constructor(private _translateService: TranslateService,\n              private _poolsService: PoolsService) {\n  }\n\n  changeLanguage(language) {\n    this._translateService.use(language);\n    this.selectedLanguage = language;\n  }\n\n  ngOnInit() {\n    this.selectedLanguage = this.languages[1];\n  }\n\n  get address() {\n    return this._poolsService.address || '-';\n  }\n}\n","module.exports = \"<div (click)=\\\"togglePanel()\\\" class=\\\"selected\\\">{{'language.'+selectedLanguage | translate}}</div>\\n\\n<div class=\\\"panel\\\" [ngClass]=\\\"{'closed': !isOpened}\\\">\\n  <div class=\\\"language-panel\\\">\\n    <div class=\\\"item\\\" (click)=\\\"changeSelection(language)\\\"\\n         *ngFor=\\\"let language of languages\\\">{{'language.'+language | translate}}\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".selected {\\n  color: #fff;\\n  cursor: pointer;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n  .selected:hover {\\n    color: #a1d0c5; }\\n  .panel {\\n  display: block;\\n  position: absolute;\\n  z-index: 99;\\n  transition: all 1s;\\n  overflow: hidden; }\\n  .panel.closed {\\n    max-height: 0px; }\\n  .language-panel {\\n  display: block;\\n  cursor: pointer;\\n  background-color: #fff;\\n  padding: 10px; }\\n  .language-panel .item {\\n    cursor: pointer;\\n    color: #09245d;\\n    padding: 5px; }\\n  .language-panel .item:hover {\\n      color: #a1d0c5; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss']\n})\nexport class LanguageSelectorComponent implements OnInit {\n\n  @Input() languages;\n  @Input() selectedLanguage;\n  @Output() onSelectChange = new EventEmitter<any>();\n\n  isOpened = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  togglePanel() {\n    this.isOpened = !this.isOpened;\n  }\n\n  changeSelection(language) {\n    this.onSelectChange.next(language);\n    this.isOpened = false;\n  }\n}\n","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"right switch-btn voteo-bold\\\" (click)=\\\"getNextQuestion(createQuestionForm)\\\">{{operation}}</div>\\n  <div *ngIf=\\\"currentQuestionIndex > 0\\\" class=\\\"left switch-btn\\\" (click)=\\\"getPreviousQuestion(createQuestionForm)\\\"><</div>\\n  <div class=\\\"wrapper\\\">\\n    <div class=\\\"header\\\">{{'pools.newPool' | translate}}</div>\\n    <form [formGroup]=\\\"createQuestionForm\\\">\\n      <div class=\\\"title voteo-bold\\\">{{'pools.question' | translate}} {{currentQuestionIndex + 1}}/{{numberOfQuestions + 1}}</div>\\n      <input class=\\\"question-name\\\" formControlName=\\\"name\\\">\\n\\n      <div class=\\\"parameters\\\">\\n        <mat-slide-toggle class=\\\"param\\\" formControlName=\\\"openEnded\\\">\\n          <span class=\\\"label voteo-bold\\\">{{'pools.create.openEnded' | translate}}</span>\\n          <span class=\\\"hint\\\">{{'pools.create.openEndedHint' | translate}}</span>\\n        </mat-slide-toggle>\\n        <mat-slide-toggle class=\\\"param\\\" formControlName=\\\"multiple\\\">\\n          <span class=\\\"label voteo-bold\\\">{{'pools.create.multiple' | translate}}</span>\\n        </mat-slide-toggle>\\n      </div>\\n\\n      <fieldset formArrayName=\\\"options\\\">\\n        <button class=\\\"voteo-button add-option\\\" type=\\\"button\\\" (click)=\\\"addOption()\\\">{{'pools.create.addOption' |\\n          translate}}\\n        </button>\\n        <div class=\\\"\\\" *ngFor=\\\"let option of options.controls; let j=index\\\"\\n             [formGroupName]=\\\"j\\\">\\n          <div class=\\\"option\\\">\\n            <span class=\\\"label\\\">{{'pools.create.option' | translate}} {{j}}:</span>\\n            <input class=\\\"question-name\\\" formControlName=\\\"label\\\">\\n          </div>\\n        </div>\\n      </fieldset>\\n\\n      <div class=\\\"submit\\\">\\n        <button *ngIf=\\\"currentQuestionIndex > 0\\\" type=\\\"button\\\" (click)=\\\"removeCurrentQuestion()\\\" class=\\\"voteo-button\\\">{{'actions.delete' | translate}}</button>\\n        <ng-content></ng-content>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \".question-name {\\n  width: 100%; }\\n\\nform {\\n  margin: 0px 20px 10px 20px; }\\n\\nmat-slide-toggle {\\n  font-size: 14px;\\n  color: #09245d; }\\n\\n.wrapper {\\n  margin: 0px 20px;\\n  z-index: 100; }\\n\\n.parameters .param {\\n  padding: 10px 30px; }\\n\\n.parameters .label {\\n  padding-left: 10px; }\\n\\n.option {\\n  display: flex;\\n  padding-bottom: 5px; }\\n\\n.option .label {\\n    font-size: 12px;\\n    width: 15%;\\n    margin: auto; }\\n\\n.option input {\\n    width: 85%; }\\n\\n.submit {\\n  justify-content: center;\\n  align-items: center;\\n  display: flex;\\n  width: 100%; }\\n\\n.submit button {\\n    margin: 5px; }\\n\\n.add-option {\\n  font-size: 12px; }\\n\\n.left {\\n  font-size: 32px;\\n  cursor: pointer;\\n  position: absolute;\\n  top: 50%;\\n  left: -25px;\\n  border-bottom-left-radius: 25px;\\n  border-top-left-radius: 25px;\\n  width: 40px;\\n  display: flex;\\n  justify-content: center;\\n  border-right: 0px !important;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2); }\\n\\n.right {\\n  font-size: 32px;\\n  cursor: pointer;\\n  position: absolute;\\n  top: 50%;\\n  right: -22px;\\n  border-bottom-right-radius: 25px;\\n  border-top-right-radius: 25px;\\n  width: 40px;\\n  display: flex;\\n  justify-content: center;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2); }\\n\\n.switch-btn {\\n  background-color: white;\\n  color: #09245d;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n\\n.switch-btn:hover {\\n    background-color: rgba(48, 61, 144, 0.1); }\\n\\n.content {\\n  position: relative; }\\n\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PoolsService} from '../../shared/pools/pools.service';\nimport { v4 as uuid } from 'uuid';\n\n@Component({\n  selector: 'app-new-question-page',\n  templateUrl: './new-question-page.component.html',\n  styleUrls: ['./new-question-page.component.scss']\n})\nexport class NewQuestionPageComponent implements OnChanges {\n\n  @Output()\n  onUpdate = new EventEmitter();\n  @Output()\n  afterNextQuestionPressed = new EventEmitter<any>();\n  @Output()\n  afterPreviousQuestionPressed = new EventEmitter();\n  @Output()\n  afterClickOnRemove = new EventEmitter<number>();\n\n  @Input()\n  question;\n  @Input()\n  numberOfQuestions;\n  @Input()\n  currentQuestionIndex;\n\n  createQuestionForm: FormGroup;\n  optionIndex = 0;\n\n  constructor(private fb: FormBuilder) {\n    this.initForm();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.question) {\n      this.initForm();\n\n      if (this.question) {\n        if (this.question.options) {\n          for (const option of this.question.options) {\n           this.addOption();\n          }\n        }\n\n        this.createQuestionForm.patchValue(this.question);\n      }\n    }\n  }\n\n  initForm() {\n    this.optionIndex = 0;\n\n    this.createQuestionForm = this.fb.group({\n      'name': [''],\n      'openEnded': [false],\n      'multiple': [false],\n      'options': this.fb.array([])\n    });\n\n    this.createQuestionForm.valueChanges.subscribe(\n      questions => {\n        console.log('questions change', questions);\n        this.onUpdate.emit(questions);\n      }\n    );\n  }\n\n  addOption(label = '') {\n    const option = this.fb.group({\n      'id': [uuid()],\n      'label': [label, Validators.required]\n    });\n    this.optionIndex++;\n\n    this.options.push(option);\n  }\n\n  getNextQuestion({value}) {\n    this.afterNextQuestionPressed.next(value);\n  }\n\n  getPreviousQuestion({value}) {\n    this.afterPreviousQuestionPressed.next(value);\n  }\n\n  removeCurrentQuestion() {\n    this.afterClickOnRemove.next(this.currentQuestionIndex);\n  }\n\n  get hasMoreQuestions() {\n    return this.currentQuestionIndex < this.numberOfQuestions - 1;\n  }\n  get options() {\n    return this.createQuestionForm.get('options') as FormArray;\n  }\n\n  get operation() {\n    return this.currentQuestionIndex < this.numberOfQuestions ? '>' : '+';\n  }\n}\n","module.exports = \"<div>{{option.label}} - <span>{{result}}</span></div>\\n\"","module.exports = \"\"","import { Component, Input, OnInit } from '@angular/core';\nimport { PoolsService } from '../../shared/pools/pools.service';\n\n@Component({\n  selector: 'app-poll-result',\n  templateUrl: './poll-result.component.html',\n  styleUrls: ['./poll-result.component.scss']\n})\nexport class PollResultComponent implements OnInit {\n\n  @Input()\n  option;\n  @Input()\n  poll;\n\n  result;\n\n  constructor(private _pollsService: PoolsService) {\n\n  }\n\n  ngOnInit() {\n    this._pollsService.getOptionResult(this.poll.id, this.option.id).subscribe(\n      result => {\n        const pollInformation = this._pollsService.actualPolls.find(poll => poll.id === this.poll.id );\n\n        this.result = result.stack[0].value;\n      },\n          error => alert(error)\n    );\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\" [ngClass]=\\\"{'hovered': hovered}\\\">\\n  <div class=\\\"content\\\">\\n    <div class=\\\"icon\\\">\\n      <img class=\\\"img-fluid\\\" [src]=\\\"picture\\\">\\n    </div>\\n\\n    <div class=\\\"action-name voteo-bold\\\">\\n      {{label | translate}}\\n    </div>\\n\\n    <div class=\\\"details\\\">\\n      <ng-content></ng-content>\\n    </div>\\n\\n    <div class=\\\"button-wrapper\\\">\\n      <button (click)=\\\"redirectToPage()\\\" class=\\\"voteo-bold\\\">{{'actions.viewAll' | translate}}</button>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \":host:hover {\\n  -webkit-transform: scale(1.1);\\n          transform: scale(1.1);\\n  z-index: 10;\\n  background-color: white !important; }\\n\\n.wrapper {\\n  margin: 2px;\\n  border: 1px solid #e1ab05;\\n  background-color: #edeef1;\\n  text-align: center;\\n  height: 100%; }\\n\\n.wrapper.hovered {\\n    background-color: white; }\\n\\n.action-name {\\n  font-size: 20px;\\n  color: #09245d; }\\n\\n.content {\\n  padding-bottom: 10px;\\n  height: 100%; }\\n\\nimg {\\n  height: 150px;\\n  margin: 60px 0px; }\\n\\nbutton {\\n  cursor: pointer;\\n  border: 1px solid #09245d;\\n  border-radius: 2px;\\n  box-shadow: 1px rgba(0, 0, 0, 0.2);\\n  color: #09245d;\\n  background: linear-gradient(to right, #fff, rgba(48, 61, 144, 0.1)); }\\n\\nbutton:hover {\\n    color: #fff;\\n    background: linear-gradient(to right, #303d90, #09245d); }\\n\"","import {Component, HostListener, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-pool-action-element',\n  templateUrl: './pool-action-element.component.html',\n  styleUrls: ['./pool-action-element.component.scss']\n})\nexport class PoolActionElementComponent implements OnInit {\n\n  @Input() label;\n  @Input() picture;\n  @Input() redirectLink;\n\n  hovered;\n\n  @HostListener('mouseover', ['$event'])\n  onMouseOver() {\n    this.hovered = true;\n  }\n\n  @HostListener('mouseout', ['$event'])\n  onMouseOut() {\n    this.hovered = false;\n  }\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  redirectToPage() {\n    this.router.navigate([this.redirectLink]);\n  }\n}\n","module.exports = \"<div class=\\\"actions row\\\">\\n  <app-pool-action-element\\n    [picture]=\\\"'assets/img/pools.png'\\\"\\n    [label]=\\\"'pools.types.create'\\\"\\n    [redirectLink]=\\\"'/ownPools'\\\"\\n    class=\\\"col-4 action\\\">\\n    <div class=\\\"create\\\" (click)=\\\"createPool()\\\">\\n        <span class=\\\"img-fluid\\\">\\n          <img src=\\\"assets/img/create.png\\\">\\n        </span>\\n      {{'pools.createNew' | translate}}\\n    </div>\\n    <div>{{'pools.or' | translate}}</div>\\n  </app-pool-action-element>\\n\\n  <app-pool-action-element\\n    [picture]=\\\"'assets/img/vote.png'\\\"\\n    [label]=\\\"'pools.types.vote'\\\"\\n    [redirectLink]=\\\"'/pools'\\\"\\n    class=\\\"col-4 action\\\">\\n    {{'pools.noPending' | translate}}\\n  </app-pool-action-element>\\n\\n  <app-pool-action-element\\n    [picture]=\\\"'assets/img/public_pools.png'\\\"\\n    [label]=\\\"'pools.types.public'\\\" class=\\\"col-4 action\\\"\\n    [redirectLink]=\\\"'/publicpools'\\\">\\n    {{'pools.public' | translate: numberOfPools}}\\n  </app-pool-action-element>\\n</div>\\n\"","module.exports = \":host {\\n  display: block;\\n  position: relative; }\\n\\n.action {\\n  padding: 0 !important;\\n  transition: all .4s; }\\n\\n.actions {\\n  margin: 0px 0px 0px 20px; }\\n\\n.create {\\n  display: block;\\n  cursor: pointer; }\\n\\n.create img {\\n    width: 18px;\\n    height: 18px; }\\n\\n.create:hover {\\n    color: #09245d;\\n    text-decoration: underline; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-pool-actions',\n  templateUrl: './pool-actions.component.html',\n  styleUrls: ['./pool-actions.component.scss']\n})\nexport class PoolActionsComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  createPool() {\n    this.router.navigate(['/create']);\n  }\n\n  get numberOfPools() {\n    return {numberOfPools: 386};\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <form [formGroup]=\\\"poolSettings\\\">\\n    <div class=\\\"col-12 type\\\">\\n      {{'pools.settings.private' | translate}}\\n      <mat-slide-toggle formControlName=\\\"public\\\"></mat-slide-toggle>\\n      {{'pools.settings.public' | translate}}   (Functional in 0.9.1)\\n    </div>\\n\\n    <fieldset class=\\\"col-12\\\" *ngIf=\\\"!isPublic\\\" formArrayName=\\\"privateAddresses\\\">\\n      <button class=\\\"voteo-button add-option\\\" type=\\\"button\\\" (click)=\\\"addPrivateAddress()\\\">\\n        {{'pools.create.addPrivateOption' |\\n        translate}}\\n      </button>\\n      <div class=\\\"address\\\" *ngFor=\\\"let address of addresses.controls; let j=index\\\"\\n           [formGroupName]=\\\"j\\\">\\n        <div class=\\\"option\\\">\\n          <span class=\\\"label\\\">{{'pools.create.address' | translate}} {{j}}:</span>\\n          <input class=\\\"question-name\\\" formControlName=\\\"address\\\">\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <!--<div class=\\\"message\\\">-->\\n      <!--{{'message.tbd' | translate}}-->\\n    <!--</div>-->\\n\\n    <div *ngIf=\\\"true\\\" class=\\\"disabled\\\">\\n      <div class=\\\"col-12\\\">\\n        <br>To be added (Version 0.9.2 and higher):\\n        <mat-form-field class=\\\"full-width\\\">\\n          <mat-select [placeholder]=\\\"'pools.settings.verification' | translate\\\" formControlName=\\\"verification\\\">\\n            <mat-option *ngFor=\\\"let verification of verifications\\\" [value]=\\\"verification.value\\\">\\n              {{verification.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"date col-12\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput [matDatepicker]=\\\"startPicker\\\" [placeholder]=\\\"'pools.settings.startDate' | translate\\\"\\n                 formControlName=\\\"startDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"startPicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #startPicker></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"date col-12\\\">\\n        <mat-form-field class=\\\"full-width\\\">\\n          <input matInput [matDatepicker]=\\\"endPicker\\\" [placeholder]=\\\"'pools.settings.endDate' | translate\\\"\\n                 formControlName=\\\"endDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"endPicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #endPicker></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"col-12\\\">\\n        <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"reward\\\">\\n          {{'pools.settings.reward' | translate}}\\n        </mat-checkbox>\\n      </div>\\n\\n      <ng-container *ngIf=\\\"isReward\\\">\\n        <mat-form-field class=\\\"full-width col-4\\\">\\n          <input matInput type=\\\"number\\\" [placeholder]=\\\"'pools.settings.totalBudget' | translate\\\"\\n                 formControlName=\\\"totalBudget\\\">\\n          <span matSuffix>GAS</span>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width col-4\\\">\\n          <input matInput type=\\\"number\\\" [placeholder]=\\\"'pools.settings.totalReward' | translate\\\"\\n                 formControlName=\\\"totalReward\\\">\\n          <span matSuffix>GAS</span>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"full-width col-4\\\">\\n          <input matInput type=\\\"number\\\" [placeholder]=\\\"'pools.settings.participans' | translate\\\"\\n                 formControlName=\\\"participans\\\">\\n        </mat-form-field>\\n      </ng-container>\\n\\n      <div class=\\\"col-12\\\">\\n        <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"tokenRequirements\\\">\\n          {{'pools.settings.tokenRequirements' | translate}}\\n        </mat-checkbox>\\n      </div>\\n\\n      <mat-form-field class=\\\"col-4\\\">\\n        <mat-select [placeholder]=\\\"'pools.settings.tokenType' | translate\\\" formControlName=\\\"tokenType\\\">\\n          <mat-option *ngFor=\\\"let tokenType of tokenTypes\\\" [value]=\\\"tokenType.value\\\">\\n            {{tokenType.label}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <ng-container *ngIf=\\\"areTokenRequirements\\\">\\n        <mat-form-field class=\\\"col-4 full-width\\\">\\n          <input type=\\\"number\\\" matInput [placeholder]=\\\"'pools.settings.minimumAmount' | translate\\\"\\n                 formControlName=\\\"minimumAmount\\\">\\n\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"col-4 full-width\\\">\\n          <input type=\\\"number\\\" matInput [placeholder]=\\\"'pools.settings.tokensPerVote' | translate\\\"\\n                 formControlName=\\\"tokensPerVote\\\">\\n        </mat-form-field>\\n\\n        <mat-checkbox class=\\\"col-4 example-margin\\\" formControlName=\\\"audianceSpecification\\\">\\n          {{'pools.settings.audianceSpecification' | translate}}\\n        </mat-checkbox>\\n      </ng-container>\\n      <!--<button (click)=\\\"back()\\\" class=\\\"voteo-button\\\">{{'actions.back' | translate}}</button>-->\\n      <!--<button (click)=\\\"submit()\\\" class=\\\"voteo-button\\\">{{'actions.submit' | translate}}</button>-->\\n    </div>\\n    <ng-content></ng-content>\\n  </form>\\n</div>\\n\"","module.exports = \".date {\\n  display: inline-block; }\\n\\n.full-width {\\n  width: 100%; }\\n\\n.address {\\n  margin: 5px; }\\n\\n.message {\\n  position: absolute;\\n  display: block;\\n  top: 50%;\\n  left: 44%;\\n  z-index: 2;\\n  font-size: 16px; }\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-pool-settings',\n  templateUrl: './pool-settings.component.html',\n  styleUrls: ['./pool-settings.component.scss']\n})\nexport class PoolSettingsComponent implements OnInit {\n\n  poolSettings: FormGroup;\n  verifications = [{\n    value: 'KYC',\n    label: 'KYC'\n  },\n    {\n      value: 'KYC 2.0',\n      label: 'KYC 2.0'\n    }];\n  tokenTypes = [\n    {\n    value: 'ETH',\n    label: 'ETH'\n    },\n    {\n      value: 'NEO',\n      label: 'NEO'\n    }];\n\n  @Output() onUpdate = new EventEmitter<any>();\n\n  constructor(private fb: FormBuilder) {\n    this.poolSettings = fb.group({\n      public: [true],\n      verification: ['', Validators.required],\n      startDate: [new Date()],\n      endDate: [''],\n      totalReward: [0],\n      totalBudget: [0],\n      reward: [false],\n      maxParticipants: [''],\n      tokenRequirements: [false],\n      minimumAmount: [],\n      tokensPerVote: [],\n      participans: [],\n      tokenType: [],\n      privateAddresses: fb.array([]),\n      audianceSpecification: [false]\n    });\n  }\n\n  ngOnInit() {\n    this.poolSettings.valueChanges.subscribe(\n      form => {\n        this.onUpdate.emit(form);\n      }\n    );\n    this.onUpdate.emit(this.poolSettings.value);\n  }\n\n  addPrivateAddress() {\n    const option = this.fb.group({\n      'address': [''],\n    });\n    this.addresses.push(option);\n  }\n\n  get isPublic() {\n    return this.poolSettings.get('public').value;\n  }\n\n  get addresses() {\n    return this.poolSettings.get('privateAddresses') as FormArray;\n  }\n\n  get isReward() {\n    return this.poolSettings.get('reward').value;\n  }\n\n  get areTokenRequirements() {\n    return this.poolSettings.get('tokenRequirements').value;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"header\\\">{{'pools.newPool' | translate}}</div>\\n  <div class=\\\"title voteo-bold\\\">{{'pools.summary' | translate}}</div>\\n\\n  <ng-container *ngIf=\\\"title.length < 1\\\">\\n    <div class=\\\"message\\\">\\n      {{'pools.noTitle' | translate}}\\n    </div>\\n  </ng-container>\\n\\n  <div *ngIf=\\\"questions.length > 0; else noQuestions\\\" class=\\\"voteo-table\\\">\\n    <ng-container *ngFor=\\\"let question of questions\\\">\\n      <div class=\\\"highlight voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.name' | translate}}</span>\\n        <span class=\\\"column value\\\">{{question?.name}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.openEnded' | translate}}</span>\\n        <span class=\\\"column value\\\">{{question?.openEnded}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.multiple' | translate}}</span>\\n        <span class=\\\"column value\\\">{{question?.multiple}}</span>\\n      </div>\\n      <div *ngFor=\\\"let option of question?.options; let i=index\\\" class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.create.option' | translate}} {{i}}</span>\\n        <span class=\\\"column value\\\">{{option.label}}</span>\\n      </div>\\n    </ng-container>\\n  </div>\\n\\n\\n  <div class=\\\"voteo-table\\\">\\n    <div class=\\\"highlight voteo-row\\\">\\n      {{'pools.create.settings' | translate}}\\n    </div>\\n    <ng-container *ngIf=\\\"settings\\\">\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.public' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.public}}</span>\\n      </div>\\n      <ng-container *ngIf=\\\"!settings?.public\\\">\\n        <div *ngFor=\\\"let privateAddress of settings?.privateAddresses; let i=index\\\" class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.create.privateAddress' | translate}} {{i}}</span>\\n          <span class=\\\"column value\\\">{{privateAddress}}</span>\\n        </div>\\n      </ng-container>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.verification' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.verification}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.startDate' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.startDate | localizedDate}}</span>\\n      </div>\\n      <div class=\\\"voteo-row\\\">\\n        <span class=\\\"column key\\\">{{'pools.settings.endDate' | translate}}</span>\\n        <span class=\\\"column value\\\">{{settings?.endDate | localizedDate}}</span>\\n      </div>\\n      <ng-container *ngIf=\\\"settings.reward\\\">\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.totalReward' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.totalReward}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.totalBudget' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.totalBudget}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.participans' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.participans}}</span>\\n        </div>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"settings.tokenRequirements\\\">\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.tokenType' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.tokenType}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.minimumAmount' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.minimumAmount}}</span>\\n        </div>\\n        <div class=\\\"voteo-row\\\">\\n          <span class=\\\"column key\\\">{{'pools.settings.tokensPerVote' | translate}}</span>\\n          <span class=\\\"column value\\\">{{settings?.tokensPerVote}}</span>\\n        </div>\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n\\n  <div class=\\\"button-wrapper\\\">\\n    <ng-content></ng-content>\\n    <!--<button (click)=\\\"back()\\\" class=\\\"voteo-button\\\">{{'actions.back' | translate}}</button>-->\\n    <!--<button (click)=\\\"submit()\\\" class=\\\"voteo-button\\\">{{'actions.submit' | translate}}</button>-->\\n  </div>\\n</div>\\n\\n<ng-template #noQuestions>\\n  <div class=\\\"message\\\">\\n    {{'pools.noQuestions' | translate}}\\n  </div>\\n</ng-template>\\n\"","module.exports = \".column {\\n  display: inline-block;\\n  width: 50%;\\n  border-right: 1px solid #9c9da0; }\\n  .column:last-child {\\n    border-right: 0px; }\\n  .key {\\n  color: #09245d;\\n  font-family: BrochaBold; }\\n  .highlight .key {\\n  color: #fff !important; }\\n  .highlight {\\n  color: #fff !important;\\n  background-color: #09245d; }\\n  .highlight:first-child {\\n    border-top-right-radius: 9px;\\n    border-top-left-radius: 9px; }\\n  .value {\\n  text-align: center; }\\n  .header {\\n  width: 100%;\\n  display: block;\\n  position: relative; }\\n  .button-wrapper {\\n  padding: 10px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center; }\\n  .button-wrapper button:nth-child(n-1) {\\n    margin-left: 10px; }\\n  .voteo-table {\\n  margin-bottom: 10px; }\\n  .message {\\n  text-align: center;\\n  padding: 10px;\\n  border-radius: 5px;\\n  margin: 30px;\\n  background-color: #edeef1;\\n  border: 1px solid #5d0d0f; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'app-pool-summary',\n  templateUrl: './pool-summary.component.html',\n  styleUrls: ['./pool-summary.component.scss']\n})\nexport class PoolSummaryComponent implements OnInit {\n\n  @Output()\n  onSubmitPressed = new EventEmitter();\n  @Output()\n  onBackPressed = new EventEmitter();\n  @Input()\n  pool;\n  @Input()\n  title;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.pool.settings.privateAddresses = this.pool.settings.privateAddresses.map(address => address.address);\n  }\n\n  submit() {\n    this.onSubmitPressed.next();\n  }\n\n  back() {\n    this.onBackPressed.next();\n  }\n\n  get name() {\n    return this.questions.name;\n  }\n\n  get openEnded() {\n    return this.questions.openEnded;\n  }\n\n  get multiple() {\n    return this.questions.multiple;\n  }\n\n  get options() {\n    return this.questions.options;\n  }\n\n  get questions() {\n    return this.pool.questions;\n  }\n\n  get settings() {\n    return this.pool.settings;\n  }\n\n}\n","module.exports = \"<div class=\\\"tile-wrapper\\\">\\n  <div class=\\\"upper-part\\\">\\n    <span class=\\\"title voteo-bold\\\">{{poolTitle}}</span>\\n  </div>\\n  <div class=\\\"bottom-part\\\">\\n    <span class=\\\"question-count\\\">{{'pools.questions' | translate}}:{{numberOfQuestions}}</span>\\n    <span class=\\\"voters\\\">{{'pools.voted' | translate}}: {{voted}}</span>\\n    <div class=\\\"actions\\\">\\n      <button [disabled]=\\\"hasVoted\\\" class=\\\"voteo-button\\\" (click)=\\\"openVoting()\\\">{{'pools.vote' | translate}}</button>\\n      <button *ngIf=\\\"isOwnPoll\\\" class=\\\"voteo-button\\\" (click)=\\\"showResults()\\\">{{'pools.result' | translate}}</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".tile-wrapper {\\n  border: 0.5px solid #9c9da0; }\\n\\n.upper-part {\\n  background-color: #09245d;\\n  border: 0.5px solid #09245d;\\n  color: #fff; }\\n\\n.bottom-part {\\n  position: relative;\\n  display: flex;\\n  width: 100%; }\\n\\n.bottom-part .actions {\\n    width: 30%;\\n    display: inline-block;\\n    margin: 5px;\\n    height: 28px; }\\n\\n.bottom-part .actions button:first-child {\\n      margin-right: 4px; }\\n\\n.question-count {\\n  display: inline-block;\\n  width: 35%; }\\n\\n.voters {\\n  width: 35%; }\\n\\n.title {\\n  color: #fff; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-pool-tile',\n  templateUrl: './pool-tile.component.html',\n  styleUrls: ['./pool-tile.component.scss']\n})\nexport class PoolTileComponent implements OnInit {\n\n  @Input()\n  pool;\n\n  @Input()\n    ownPoll;\n\n  poolTitle;\n  numberOfQuestions = 0;\n  voted = 0;\n  hasVoted;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n    const parsedArray = this.pool.id.split('_');\n    if (parsedArray.length > 2) {\n      this.poolTitle = parsedArray[1] ? parsedArray[1] : '-';\n      this.numberOfQuestions = parsedArray[2] ? parsedArray[2] : '0';\n    }\n\n    this.voted = this.pool.voted;\n    this.hasVoted = this.pool.canVote === 'true' ? true : false;\n  }\n\n  openVoting() {\n    if (this.hasFreeVoting) {\n      this.router.navigate([`pool/${this.pool.id}`]);\n    }\n  }\n\n  showResults() {\n    if (this.isOwnPoll) {\n      this.router.navigate([`result/${this.pool.id}`]);\n    }\n  }\n\n  get neededVoters() {\n    return (this.pool.needsVotes) ? this.pool.needsVotes : 0;\n  }\n\n  get isOwnPoll() {\n    return this.ownPoll;\n  }\n\n  get hasFreeVoting() {\n    return true; //this.voted < this.neededVoters;\n  }\n}\n","module.exports = \"<div class=\\\"pool-wrapper\\\">\\n  <div class=\\\"pool-title voteo-bold\\\">{{pool.title}}</div>\\n    <div class=\\\"question\\\" *ngFor=\\\"let question of pool.questions; let i = index\\\">\\n      <div class=\\\"voteo-bold question-name\\\">{{question.name}}</div>\\n      <div class=\\\"options\\\">\\n\\n        <ng-container *ngIf=\\\"question.multiple; else singleOption\\\">\\n          <mat-checkbox (change)=\\\"updateAnswer($event, i, option)\\\" *ngFor=\\\"let option of question.options\\\">{{option.label}}</mat-checkbox>\\n        </ng-container>\\n\\n        <ng-template #singleOption>\\n          <mat-radio-group>\\n            <mat-radio-button (change)=\\\"updateAnswer($event, i, option)\\\" *ngFor=\\\"let option of question.options\\\"\\n                              class=\\\"example-margin\\\" [value]=\\\"option.label\\\">{{option.label}}\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </ng-template>\\n\\n\\n        <ng-container *ngIf=\\\"question.openEnded\\\">\\n          <input (input)=\\\"updateAnswer($event, i, $event.target.value, true)\\\" class=\\\"freeText\\\">\\n        </ng-container>\\n      </div>\\n    </div>\\n    <div class=\\\"actions\\\">\\n      <button (click)=\\\"vote()\\\" class=\\\"voteo-button\\\">{{'actions.vote' | translate}}</button>\\n    </div>\\n</div>\\n\"","module.exports = \".options, mat-radio-group {\\n  display: block;\\n  width: 100%; }\\n  .options input, mat-radio-group input {\\n    display: inline-block;\\n    width: 40%; }\\n  mat-checkbox, mat-radio-button {\\n  display: inline-block;\\n  width: 40%; }\\n  .actions {\\n  width: 100%;\\n  margin: auto;\\n  text-align: center;\\n  padding: 20px; }\\n  .pool-title {\\n  font-size: 28px; }\\n  .question-name {\\n  padding: 5px;\\n  width: 100%;\\n  color: #fff !important;\\n  background-color: #e1ab05;\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px; }\\n  .question {\\n  border-top-right-radius: 10px;\\n  border-top-left-radius: 10px;\\n  margin: 10px 0px; }\\n  .options {\\n  padding: 10px;\\n  border: 0.5px solid #9c9da0;\\n  border-top: 0px; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pool',\n  templateUrl: './pool.component.html',\n  styleUrls: ['./pool.component.scss']\n})\nexport class PoolComponent implements OnInit {\n\n  @Input()\n  pool;\n\n  result = [];\n  optionResult = [];\n\n  constructor(private _poolService: PoolsService,\n              private router: Router) {\n\n  }\n\n  ngOnInit() {\n\n    this.result = new Array<any>(this.pool.questions.length);\n    this.result.fill({answers: [], freeText: ''});\n    // const option = this.fb.group({\n    //   'label': [label, Validators.required]\n    // });\n    // this.options.push(option);\n  }\n\n  vote() {\n    this._poolService.registerVote(this.optionResult, this.pool.id).subscribe(\n      result => {\n        alert(\"Vote was registered and should be processed on blockchain within a minute. Thanks for voting!\")\n        this.router.navigate(['/']);\n    },\n      error => alert(error)\n    );\n  }\n\n  updateAnswer(event, questionIndex, answer, freeText = false) {\n    const question = this.pool.questions[questionIndex];\n\n    if (!freeText) {\n      if (question.multiple) {\n        if (event.checked) {\n          this.result[questionIndex] = {...this.result[questionIndex], answers: [...this.result[questionIndex].answers, answer.id]};\n        } else {\n          this.result[questionIndex].answers.splice(answer.id, 1);\n        }\n      } else {\n        this.result[questionIndex] = {answers: [answer.id]};\n      }\n    } else {\n      this.result[questionIndex] = {answers: [...this.result[questionIndex].answers], freeText: answer};\n    }\n\n   this.optionResult = [];\n\n      this.result.map(\n      optionIds => {\n        this.optionResult = [...this.optionResult, ...optionIds.answers];\n      }\n    );\n  }\n\n  isMultiple(question) {\n    return question.multiple;\n  }\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n\\n  <div class=\\\"social-wrapper\\\">\\n    <div class=\\\"profile-picture\\\">\\n      <img class=\\\"img-fluid\\\" [src]=\\\"picture\\\"\\n           [style.width.px]=\\\"pictureSize\\\"\\n           [style.height.px]=\\\"pictureSize\\\">\\n    </div>\\n\\n    <div class=\\\"name\\\">\\n      {{name}} <span *ngIf=\\\"isValidated\\\"><img class=\\\"validated\\\" src=\\\"assets/img/check.png\\\"></span>\\n    </div>\\n  </div>\\n  <div class=\\\"information\\\">\\n    <div class=\\\"voteo-table\\\">\\n      <input #cryptoAddressElement class=\\\"voteo-row\\\"\\n             (click)=\\\"copyToClipboard()\\\" [(ngModel)]=\\\"cryptoAddress\\\">\\n      <div class=\\\"voteo-row\\\">{{address}}</div>\\n      <div class=\\\"voteo-row\\\">{{contacts}} {{'profile.contacts' | translate}}</div>\\n      <div class=\\\"voteo-row\\\">{{email}}</div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".wrapper {\\n  border: 1px solid #e1ab05;\\n  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);\\n  border-radius: 8px;\\n  position: relative;\\n  text-align: center; }\\n\\n.profile-picture {\\n  padding: 10px; }\\n\\n.profile-picture img {\\n    height: 150px;\\n    width: 150px; }\\n\\n.name {\\n  font-size: 26px; }\\n\\n.validated {\\n  width: 26px;\\n  height: 26px; }\\n\\n.detail {\\n  display: block;\\n  position: relative;\\n  width: 90%;\\n  margin: auto;\\n  border: 1px solid #9c9da0;\\n  border-radius: 10px; }\\n\\n.detail input {\\n    border-radius: 10px 10px 0px 0px;\\n    width: 100%;\\n    text-align: left;\\n    border: 0px;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n    border-bottom: 1px solid #9c9da0;\\n    outline: none !important;\\n    cursor: pointer; }\\n\\n.row {\\n  display: block;\\n  padding: 5px;\\n  text-align: left;\\n  margin: auto;\\n  border-bottom: 1px solid #9c9da0;\\n  word-wrap: break-word; }\\n\\n.row:last-child {\\n    border-bottom: 0px; }\\n\\n.information {\\n  padding: 10px 0px; }\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {PoolsService} from '../../shared/pools/pools.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  @ViewChild('cryptoAddressElement')\n  cryptoAddressElement;\n\n  @Input()\n  profile;\n  @Input()\n  pictureSize = 150;\n\n  constructor(private _poolsService: PoolsService) { }\n\n  ngOnInit() {\n  }\n\n  copyToClipboard() {\n    this.cryptoAddressElement.nativeElement.select();\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges();\n  }\n\n  get cryptoAddress() {\n    return this._poolsService.address || '-';\n  }\n\n  get address() {\n    return this.profile.city;\n  }\n\n  get contacts() {\n    return this.profile.contacts;\n  }\n\n  get email() {\n    return this.profile.email;\n  }\n\n  get isValidated() {\n    return this.profile.validated;\n  }\n\n  get name() {\n    return this.profile.name;\n  }\n\n  get picture() {\n    return this.profile.picture;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {from, Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NosApiService {\n\n  nos;\n  address;\n\n\n  constructor() {\n    if ((window as any).NOS) {\n      this.nos = (window as any).NOS.V1;\n    }\n    if (this.isConnected()) {\n      this.getAddress().subscribe(\n        address =>\n          this.address = address\n      );\n    }\n  }\n\n  isConnected() {\n    return this.nos;\n  }\n\n  getAddress(): Observable<any> {\n    if (this.nos) {\n      return from(this.nos.getAddress());\n    }\n  }\n\n  getBalance(asset: string, addres?: string) {\n\n    //examples asset - NEO\n    const NEO = 'c56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b';\n    const address = 'AZPkgTJixxkSFPyBZrcVpLj9nsHsPDUVkF';\n\n    if (!addres) {\n      return this.nos.getBalance({asset});\n    } else {\n      this.nos.getBalance({asset, address});\n    }\n  }\n\n  testInvoke(scriptHash: string, operation: string, args?: string[]): Observable<any> {\n\n    if (this.nos) {\n      return from(this.nos.testInvoke({scriptHash, operation, args}));\n    }\n  }\n\n  invoke(scriptHash: string, operation: string, args?: string[]): Observable<any> {\n\n\n    if (this.nos) {\n      return from(this.nos.invoke({scriptHash, operation, args}));\n    }\n  }\n\n  getStorage(scriptHash: string, key: string) {\n    if (this.nos) {\n      return from(this.nos.getStorage({scriptHash, key}));\n    }\n  }\n\n  claimGas(): Observable<string> {\n    return from(this.nos.claimGas());\n  }\n}\n","module.exports = \"<div class=\\\"about-header\\\">\\n  About us\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  This dApp is provided to nOS by Bitcoach development team. Bitcoach community is a group of SK-CZ crypto-enthusiasts.\\n  <br>\\n  You can join us on the following channels:\\n  <br><br>\\n  <b>Telegram:  </b>t.me/join_bitcoachCHAT<br>\\n  <b>Twitter:  </b><a href=\\\"https://twitter.com/BitC0ach\\\">twitter.com/BitC0ach</a>\\n  <br>\\n  <b>Facebook:  </b><a href=\\\"https://www.facebook.com/bitc0ach/\\\">facebook.com/bitc0ach</a>\\n</div>\\n\"","module.exports = \".about-header {\\n  margin: 20px;\\n  font-size: 36px;\\n  align-items: center;\\n  text-align: center;\\n  padding: 10px;\\n  background: #edeef1; }\\n\\n.about-desc {\\n  border: 1px;\\n  border-style: solid;\\n  border-color: #e1ab05;\\n  margin: 20px;\\n  font-size: 16px;\\n  padding: 10px;\\n  background: #edeef1; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"about-header\\\">\\n  Changelog\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  <h4>Current version (0.9.1):</h4>\\n  <li>Creation of public and private polls and voting</li>\\n  <li>Multiple choice questions and open-ended option working</li>\\n  <li>Listing of a public, assigned and created polls</li>\\n  <li>Right now only creator of the poll can see the results</li>\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  <h4>Next version (0.9.2):</h4>\\n  <li>Date constraints</li>\\n  <li>Token balances constraints</li>\\n  <li>Working contact list</li>\\n</div>\\n\\n<div class=\\\"about-desc\\\">\\n  <h4>Planned:</h4>\\n  <li>Rewards system</li>\\n  <li>KYC</li>\\n</div>\\n\"","module.exports = \".about-header {\\n  margin: 20px;\\n  font-size: 36px;\\n  align-items: center;\\n  text-align: center;\\n  padding: 10px;\\n  background: #edeef1; }\\n\\n.about-desc {\\n  border: 1px;\\n  border-style: solid;\\n  border-color: #e1ab05;\\n  margin: 20px;\\n  font-size: 16px;\\n  padding: 10px;\\n  background: #edeef1; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-changelog-page',\n  templateUrl: './changelog-page.component.html',\n  styleUrls: ['./changelog-page.component.scss']\n})\nexport class ChangelogPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"list\\\">\\n  <app-profile class=\\\"item\\\"\\n               *ngFor=\\\"let contact of contacts$ | async\\\"\\n                [profile]=\\\"contact\\\"\\n                [pictureSize]=\\\"100\\\"></app-profile>\\n</div>\\n\"","module.exports = \".list {\\n  display: flex;\\n  flex-wrap: wrap; }\\n  .list .item {\\n    display: block;\\n    width: 180px !important;\\n    padding: 0px;\\n    margin: 10px;\\n    margin-top: 0px;\\n    transition: all .4s;\\n    -webkit-user-select: none !important;\\n       -moz-user-select: none !important;\\n        -ms-user-select: none !important;\\n            user-select: none !important;\\n    border-radius: 10px; }\\n  .list .item:hover {\\n      -webkit-transform: scale(1.1);\\n              transform: scale(1.1);\\n      z-index: 99;\\n      background-color: #edeef1; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ContactService} from '../../shared/contact/contact.service';\n\n@Component({\n  selector: 'app-contact-list-page',\n  templateUrl: './contact-list-page.component.html',\n  styleUrls: ['./contact-list-page.component.scss']\n})\nexport class ContactListPageComponent implements OnInit {\n\n  contacts$;\n  constructor(private _contactService: ContactService) {\n    this.contacts$ = _contactService.getContacts();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<input class=\\\"title-input\\\" matInput [placeholder]=\\\"'pools.name' | translate\\\" [(ngModel)]=\\\"poolName\\\">\\n<mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n  <mat-step [stepControl]=\\\"questionsForm\\\">\\n    <form>\\n      <ng-template matStepLabel>{{'pools.createQuestions' | translate}}</ng-template>\\n      <app-new-question-page [question]=\\\"currentQuestion\\\"\\n                             [numberOfQuestions]=\\\"numberOfQuestions\\\"\\n                             [currentQuestionIndex]=\\\"currentIndex\\\"\\n                             (afterNextQuestionPressed)=\\\"setNextQuestion($event)\\\"\\n                             (afterPreviousQuestionPressed)=\\\"setPreviousQuestion($event)\\\"\\n                             (afterClickOnRemove)=\\\"removeCurrentQuestion($event)\\\"\\n                             (onUpdate)=\\\"questionsUpdate($event)\\\">\\n        <button class=\\\"voteo-button\\\" mat-button matStepperNext>Next</button>\\n      </app-new-question-page>\\n      <div>\\n\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"settingsForm\\\">\\n    <form>\\n      <ng-template matStepLabel>{{'pools.poolSettings' | translate}}</ng-template>\\n      <app-pool-settings (onUpdate)=\\\"settingUpdate($event)\\\">\\n        <div class=\\\"button-wrapper\\\">\\n          <button class=\\\"voteo-button\\\" mat-button matStepperPrevious>Back</button>\\n          <button class=\\\"voteo-button\\\" mat-button matStepperNext>Next</button>\\n        </div>\\n      </app-pool-settings>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <form>\\n      <ng-template matStepLabel>{{'pools.summary' | translate}}</ng-template>\\n      <app-pool-summary [pool]=\\\"pool\\\"\\n                        [title]=\\\"poolName\\\"\\n                        (onSubmitPressed)=\\\"createPool()\\\"\\n                        (onBackPressed)=\\\"goToEdit()\\\">\\n        <div class=\\\"button-wrapper\\\">\\n          <button class=\\\"voteo-button\\\" mat-button matStepperPrevious>Back</button>\\n          <button class=\\\"voteo-button\\\" mat-button [disabled]=\\\"!hasQuestions || poolName.length < 1\\\" (click)=\\\"createPool()\\\">{{'pools.create.message' | translate}}</button>\\n        </div>\\n      </app-pool-summary>\\n      <div>\\n\\n      </div>\\n    </form>\\n  </mat-step>\\n  <!--<mat-step>-->\\n    <!--<ng-template matStepLabel>{{'pools.done' | translate}}</ng-template>-->\\n    <!--{{'pools.confirmation' | translate}}-->\\n    <!--<div>-->\\n      <!--<button mat-button matStepperPrevious>Back</button>-->\\n      <!--<button mat-button [disabled]=\\\"!hasQuestions\\\" (click)=\\\"createPool()\\\">{{'pools.create.message' | translate}}</button>-->\\n      <!--<button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>-->\\n    <!--</div>-->\\n  <!--</mat-step>-->\\n</mat-horizontal-stepper>\\n\"","module.exports = \".title {\\n  color: #09245d;\\n  font-size: 20px;\\n  text-align: center; }\\n\\n.wrapper {\\n  border: 1px solid #e1ab05;\\n  border-radius: 5px; }\\n\\n.title-input {\\n  width: 100%; }\\n\\n.button-wrapper {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  margin: 10px; }\\n\\n.button-wrapper button:first-child {\\n    margin-right: 5px; }\\n\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {PoolsService} from '../../shared/pools/pools.service';\nimport {stringFromArray, stringFromHex} from '../../shared/helper';\n\nimport { v4 as uuid } from 'uuid';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-create-pool-process-page',\n  templateUrl: './create-pool-process-page.component.html',\n  styleUrls: ['./create-pool-process-page.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CreatePoolProcessPageComponent implements OnInit {\n\n  pool = {questions: [], settings: {}, title: '', id: ''};\n  currentIndex = 0;\n  currentQuestion = {};\n  waitingValidation = false;\n  testResult;\n  receivedPool;\n  newPool;\n  error;\n  poolName = '';\n\n  constructor(private _poolsService: PoolsService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.currentIndex = 0;\n    this.currentQuestion = this.pool[this.currentIndex];\n  }\n\n  continueToSummary(question) {\n    this.pool[this.currentIndex] = question;\n    this.currentQuestion = question;\n    this.waitingValidation = true;\n  }\n\n  goToEdit() {\n    this.waitingValidation = false;\n  }\n\n  setNextQuestion(question) {\n    this.pool[this.currentIndex] = question;\n    this.currentIndex++;\n\n    if (this.pool[this.currentIndex]) {\n      this.currentQuestion = this.pool.questions[this.currentIndex];\n    } else {\n      this.pool.questions[this.currentIndex] = {};\n      this.currentQuestion = {\n        'name': '',\n        'openEnded': false,\n        'multiple': false,\n        'options': []\n      };\n    }\n  }\n\n  setPreviousQuestion(question) {\n    this.pool[this.currentIndex] = question;\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n      this.currentQuestion = this.pool[this.currentIndex];\n    }\n  }\n\n  removeCurrentQuestion(index) {\n    this.currentIndex--;\n    // this.currentQuestion = this.pool[this.currentIndex];\n    this.pool.questions.splice(index, 1);\n  }\n\n  settingUpdate(settings) {\n    (this.pool as any).settings = {...settings, privateAddresses: settings.privateAddresses.map(address => address.address)};\n  }\n\n  questionsUpdate(questions) {\n    (this.pool as any).questions[this.currentIndex] = questions;\n  }\n\n  createPool() {\n    if (this.hasQuestions && this.poolName.length > 0) {\n\n      this.pool.title = this.poolName;\n      this.pool.id = `${uuid()}_${this.poolName}_${this.pool.questions.length}`;\n\n      this._poolsService.createPool(this.pool, this.pool.id).subscribe(\n        result => {\n          this.router.navigate['/'];\n          alert('Poll was written into the blockchain. Poll will be visible in the public/private views within a minute. Please be patient.');\n          // this.receivedPool = result.script.replace('\\'','');\n        },\n        error => {alert('There was some issue with writing data into blockchain. Wait a couple of minutes and try again.'); this.error = error}\n      );\n    }\n  }\n\n  getPool() {\n    this._poolsService.getPool(1).subscribe(\n      result => {\n        alert('got pool');\n        this.newPool = result;\n        //this.newPool = stringFromHex(result.stack[0].value);\n      },\n          error => this.error = error\n    );\n  }\n\n  testStorage() {\n    this._poolsService.testStorage().subscribe(\n      result => {\n        this.testResult = result;\n        console.log('rest ', result);\n      },\n      error => console.log('ON ERROR =', error)\n    );\n  }\n  testInvoke() {\n    this._poolsService.testInvoke().subscribe(\n      result => {\n        this.testResult = result;\n        console.log('rest ', result);\n        if (result.stack) {\n          this.testResult = result;\n          // this.testResult = stringFromHex(result.stack[0].value);\n        }\n        // this.testResult = stringFromArray(result.stack[0].value);\n      },\n          error => console.log('ON ERROR =', error)\n    );\n  }\n  get hasQuestions() {\n    return this.pool.questions.length > 0;\n  }\n\n  get numberOfQuestions() {\n    return this.pool.questions.length - 1;\n  }\n}\n","module.exports = \"<p>\\n  home-page works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.scss']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  404: This page doesn't exists. We are sorry!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"content row\\\">\\n  <div class=\\\"col-4\\\">\\n    <app-profile [profile]=\\\"contact$ | async\\\"></app-profile>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \".header {\\n  width: 100%;\\n  display: block;\\n  position: relative; }\\n\\n.content {\\n  margin-top: 20px;\\n  padding: 10px;\\n  margin-right: 15px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ContactService} from '../../shared/contact/contact.service';\n\n@Component({\n  selector: 'app-page-skelet',\n  templateUrl: './page-skelet.component.html',\n  styleUrls: ['./page-skelet.component.scss']\n})\nexport class PageSkeletComponent implements OnInit {\n\n  contact$;\n\n  constructor(private _contactService: ContactService) {\n    this.contact$ = _contactService.getOwnUserInfo();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"pool-wrapper\\\">\\n  <h3>{{poll.title}}</h3>\\n  <div class=\\\"question\\\" *ngFor=\\\"let question of poll.questions\\\">\\n    <div class=\\\"voteo-bold question-name\\\">{{question.name}}</div>\\n    <div class=\\\"options\\\">\\n      <app-poll-result  *ngFor=\\\"let option of question.options\\\" [poll]=\\\"poll\\\" [option]=\\\"option\\\"></app-poll-result>\\n\\n      <!--<ng-container *ngIf=\\\"question.openEnded\\\">-->\\n      <!--<input class=\\\"freeText\\\">-->\\n      <!--</ng-container>-->\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { stringFromHex } from '../../shared/helper';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-polls-result',\n  templateUrl: './polls-result.component.html',\n  styleUrls: ['./polls-result.component.scss']\n})\nexport class PollsResultPageComponent implements OnInit {\n\n  poll;\n\n  constructor(private route: ActivatedRoute, private _poolService: PoolsService) {\n    this.poll = JSON.parse(stringFromHex(this.route.snapshot.data.pool.stack[0].value[1].value));\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"pool-fill-wrapper\\\">\\n  <app-pool [pool]=\\\"pool\\\"></app-pool>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {stringFromHex} from '../../shared/helper';\nimport {PoolsService} from '../../shared/pools/pools.service';\n\n@Component({\n  selector: 'app-pool-fill-page',\n  templateUrl: './pool-fill-page.component.html',\n  styleUrls: ['./pool-fill-page.component.scss']\n})\nexport class PoolFillPageComponent implements OnInit {\n\n  pool = {};\n  error;\n\n  constructor(private route: ActivatedRoute,\n              private _poolService: PoolsService) {}\n\n  ngOnInit() {\n    // this.pool = stringFromHex(this.route.snapshot.data.pool.stack[0].value);\n\n    // this._poolService.getPoolById('Public_AGXpKUGPLpCW6CAPi69chN2hy6rye11Xao_Wed Aug 01 2018 14:19:24 GMT+0200 (CEST)').subscribe(\n    //   result => this.pool = stringFromHex(result.stack[0].value[1].value),\n    //   error => this.error = error\n    // );\n    this.pool = JSON.parse(stringFromHex(this.route.snapshot.data.pool.stack[0].value[1].value));\n    //this.pool = JSON.parse(stringFromHex(this.route.snapshot.data.pool.stack[0].value));\n  }\n\n\n}\n","module.exports = \"<div class=\\\"pools-wrapper\\\">\\n  <span>{{'pools.active' | translate}}</span>\\n  <app-pool-tile class=\\\"pool-item\\\" *ngFor=\\\"let pool of pools\\\" [ownPoll]=\\\"areOwnPools\\\" [pool]=\\\"pool\\\"></app-pool-tile>\\n</div>\\n\"","module.exports = \".pool-item {\\n  display: block;\\n  padding: 5px 0px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PoolsService } from '../../shared/pools/pools.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { PollListTypes } from '../../shared/pools/pollListTypes';\nimport { stringFromHex } from '../../shared/helper';\n\n@Component({\n  selector: 'app-pools-page',\n  templateUrl: './pools-page.component.html',\n  styleUrls: ['./pools-page.component.scss']\n})\nexport class PoolsPageComponent implements OnInit {\n\n  pools;\n  areOwnPools;\n\n  constructor(private _poolsService: PoolsService,\n              private _activatedRoute: ActivatedRoute) {\n\n    _activatedRoute.data.subscribe(\n      result => {\n        switch (result.type) {\n          case PollListTypes.PRIVATE_LIST : {\n            _poolsService.getPrivatePolls().subscribe(\n              pools => {\n                this.pools = [];\n                // this.result = result.stack[0];\n                for (const pool of pools.stack[0].value) {\n                  // alert('here');\n                  this.pools.push(\n                    {\n                      id: stringFromHex(pool.value[0].value),\n                      voted: pool.value[1].value,\n                      canVote: stringFromHex(pool.value[2].value),\n                    });\n                  this._poolsService.actualPolls = this.pools;\n                }\n                this._poolsService.actualPolls = this.pools;\n              }\n            );\n            break;\n          }\n          case PollListTypes.OWN_LIST: {\n            _poolsService.getOwnPolls().subscribe(\n              pools => {\n                this.areOwnPools = true;\n                this.pools = [];\n                // this.result = result.stack[0];\n                for (const pool of pools.stack[0].value) {\n                  this.pools.push(\n                    {\n                      id: stringFromHex(pool.value[0].value),\n                      voted: pool.value[1].value,\n                      canVote: stringFromHex(pool.value[2].value),\n                    });\n                }\n                this._poolsService.actualPolls = this.pools;\n              }\n            );\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"profile-wrapper\\\">\\n  <div class=\\\"info\\\">\\n    <div class=\\\"assigned\\\">{{'pools.youHaveGotAssigned' | translate : numberOfAssignedPools}}</div>\\n    <div class=\\\"created\\\">{{'pools.youHaveCreated' | translate : numberOfCreatedPools}}</div>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss']\n})\nexport class ProfilePageComponent implements OnInit {\n\n  numberOfCreatedPools = {\n    number: 20\n  }\n\n  numberOfAssignedPools = {\n    number: 40\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"pools-wrapper\\\">\\n  <span>{{'pools.publicPools' | translate}}</span>\\n  <app-pool-tile class=\\\"pool-item\\\" *ngFor=\\\"let pool of pools\\\" [pool]=\\\"pool\\\"></app-pool-tile>\\n</div>\\n\"","module.exports = \".pool-item {\\n  display: block;\\n  padding: 5px 0px; }\\n\"","import {Component, OnInit} from '@angular/core';\nimport {PoolsService} from '../../shared/pools/pools.service';\nimport {stringFromHex} from '../../shared/helper';\n\n@Component({\n  selector: 'app-public-pools-page',\n  templateUrl: './public-pools-page.component.html',\n  styleUrls: ['./public-pools-page.component.scss']\n})\nexport class PublicPoolsPageComponent {\n\n  pools$;\n  error;\n  pools;\n\n  constructor(private _poolsService: PoolsService) {\n   _poolsService.getAllPublic().subscribe(\n      result => {\n        this.pools = [];\n        // this.result = result.stack[0];\n        for (const pool of result.stack[0].value) {\n          this.pools.push(\n            {\n              id: stringFromHex(pool.value[0].value),\n              voted: pool.value[1].value,\n              canVote: stringFromHex(pool.value[2].value),\n            });\n        }\n      },\n      error => this.error = error\n    )\n  }\n\n}\n","module.exports = \"<p>\\n  splash-screen-page works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-splash-screen-page',\n  templateUrl: './splash-screen-page.component.html',\n  styleUrls: ['./splash-screen-page.component.scss']\n})\nexport class SplashScreenPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Methods {\n\n  static scriptHash = '7135c7bb56bf7a79162651cdafa3fd6fb11d3b5e';\n\n  // OPERATIONS HERE\n  static getPoolOperation = 'GetPoll';\n  static createPoolOperation = 'RegisterPoll';\n  static getPublicAll = 'GetPublicAll';\n  static getCreatedPolls = 'GetCreatedPolls';\n  static getAssignedPolls = 'GetAssignedPolls';\n  static getPoolById = 'GetPollById';\n  static registerVote = 'RegisterVote';\n  static getOptionResults = 'GetOptionResults';\n\n  static getPools = 'ENTER_OPERATION_CODE_HERE';\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n\n  constructor() {\n  }\n\n  getOwnUserInfo() {\n    return of(\n      {\n        name: 'Kamil Bitcoach',\n        city: 'Bratislava',\n        contacts: 3,\n        email: 'info@bitcoach.net',\n        picture: '/assets/img/bitcoachlogo.jpg',\n        validated: true\n      });\n  }\n\n  getContacts(): Observable<any> {\n    return of([\n      {\n        name: 'Lukas Cader',\n        picture: '/assets/img/bitcoachlogoblack.jpg',\n        city: 'Bratislava',\n        contacts: 4,\n        email: 'info@bitcoach.net',\n        validated: true\n      },\n      {\n        name: 'Michal Sevcik',\n        picture: '/assets/img/bitcoachlogoblack.jpg',\n        city: 'Bratislava',\n        contacts: 3,\n        email: 'info@bitcoach.net',\n        validated: true\n      },\n      {\n        name: 'Branislav Mojsej',\n        picture: '/assets/img/bitcoachlogoblack.jpg',\n        city: 'Horna Dolna',\n        contacts: 150,\n        email: 'info@bitcoach.net',\n        validated: false\n      }\n    ]);\n  }\n}\n","export function stringFromArray(data) {\n  const count = data.length;\n  let str = '';\n\n  for (let index = 0; index < count; index += 1) {\n    str += String.fromCharCode(data[index]);\n  }\n\n  return str;\n}\n\nexport function stringFromHex(str1) {\n  const hex = str1.toString();\n  let str = '';\n  for (let n = 0; n < hex.length; n += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(n, 2), 16));\n  }\n  return str;\n}\n\nexport function hexToString(str) {\n  var result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += str.charCodeAt(i).toString(16);\n  }\n  return result;\n}\n","import { DatePipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Pipe({\n  name: 'localizedDate',\n  pure: false\n})\nexport class LocalizedDatePipe implements PipeTransform {\n\n  constructor(private translateService: TranslateService) {\n  }\n\n  transform(value: any, pattern: string = 'mediumDate'): any {\n    const datePipe: DatePipe = new DatePipe(this.translateService.currentLang);\n    return datePipe.transform(value, pattern);\n  }\n\n}\n","export enum PollListTypes {\n  OWN_LIST, PRIVATE_LIST, PUBLIC_LIST\n}\n","import { Injectable } from '@angular/core';\nimport {PoolsService} from './pools.service';\nimport {ActivatedRouteSnapshot, Resolve} from '@angular/router';\nimport {hexToString} from '../helper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoolResolver implements Resolve<any> {\n  constructor(private _poolsService: PoolsService) {}\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const id = route.paramMap.get('id').toString();\n\n    return this._poolsService.getPoolById(id);\n   // return this._poolsService.getPool(route.paramMap.get('id'));\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {NosApiService} from '../../nos-wrapper/services/nos-api.service';\nimport {Methods} from '../Methods';\nimport {Observable, of} from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PoolsService {\n\n  address;\n  actualPolls;\n\n  constructor(private _nosService: NosApiService) {\n    if (_nosService.isConnected()) {\n      _nosService.getAddress().subscribe(\n        address => this.address = address\n      );\n    }\n  }\n\n  public getUserPools() {\n    return of([\n      {\n        name: 'What do you like?',\n        questionCount: 14,\n        voted: 12,\n        needsVotes: 100\n      },\n      {\n        name: 'What do you want for christmas?',\n        questionCount: 14,\n        voted: 80,\n        needsVotes: 100\n      },\n      {\n        name: 'What kind of person are you',\n        questionCount: 20,\n        voted: 120,\n        needsVotes: 120\n      },\n    ]);\n  }\n\n  public getPublicPools() {\n    const publicPools = [];\n\n    for (let i = 0; i < 100; i++) {\n      publicPools.push({\n        name: 'What do you like?',\n        questionCount: 14,\n        voted: 12,\n        needsVotes: 100\n      });\n      publicPools.push({\n        name: 'What do you want for christmas?',\n        questionCount: 14,\n        voted: 80,\n        needsVotes: 100\n      });\n      publicPools.push({\n        name: 'What kind of person are you',\n        questionCount: 20,\n        voted: 120,\n        needsVotes: 120\n      });\n    }\n\n    return of(publicPools);\n  }\n\n  getOptionResult(pollId, optionId) {\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getOptionResults,\n      [this._nosService.address, pollId, optionId]\n    );\n  }\n\n  public getPrivatePolls() {\n    // TODO: CHHANGE\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getAssignedPolls,\n      [this._nosService.address]\n    );\n  }\n\n  public getOwnPolls() {\n    // TODO: CHHANGE\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getCreatedPolls,\n      [this._nosService.address]\n    );\n  }\n\n  public getPool(id) {\n    // return of({\n    //   id: 0,\n    //   name: 'What do you think about yourself',\n    //   questions: [{\n    //     name: 'kto si',\n    //     'openEnded': false,\n    //     'multiple': false,\n    //     'options': [\n    //       {'label': 'ja'},\n    //       {'label': 'ty'},\n    //       {'label': 'on'},\n    //     ]\n    //   },{\n    //       name: 'where have you been',\n    //       'openEnded': true,\n    //       'multiple': true,\n    //       'options': [\n    //         {'label': 'ja'},\n    //         {'label': 'ty'},\n    //         {'label': 'on'},\n    //       ]\n    //     }]\n    // });\n    // return this._nosService.getStorage(\n    //   Methods.scriptHash,\n    //   'poll'\n    // );\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getPoolOperation,\n      ['eqweqw']);\n  }\n\n  public registerVote(results, poolId) {\n    const result = [poolId, ...results]\n    return this._nosService.invoke(\n      Methods.scriptHash,\n      Methods.registerVote,\n      [this._nosService.address, 'DATA', ...result]\n    );\n  }\n  public getAllPublic() {\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getPublicAll,\n      [this._nosService.address]\n    );\n  }\n\n  public getPoolById(id): Observable<any> {\n\n    return this._nosService.testInvoke(\n      Methods.scriptHash,\n      Methods.getPoolById,\n      [this._nosService.address, id]\n    );\n  }\n\n  public createPool(poolParams: any, poolName) {\n    const addresses = (poolParams.settings.public) ? [''] : poolParams.settings.privateAddresses;\n      return this._nosService.invoke(\n        Methods.scriptHash,\n        Methods.createPoolOperation,\n        [this._nosService.address, JSON.stringify(poolParams), poolName, ...addresses]\n      );\n\n  }\n\n  public getPoolInvoke(script) {\n    return this._nosService.invoke(\n      script,\n      Methods.createPoolOperation,\n      ['dsajdksajkasdjskksksajdaskjsadkdjaskLUKAS', 'LUKAS']\n    );\n  }\n\n  public testStorage() {\n    return this._nosService.getStorage(\n      '9a309cfe03cead5b653bbb11f68ff6beced8f031',\n      'bucket.neo.target'\n    );\n  }\n\n  public testInvoke() {\n    return this._nosService.testInvoke(\n      '9a309cfe03cead5b653bbb11f68ff6beced8f031',\n      'GetDomain',\n      ['AK2nJJpJr6o664CWJKi1QRXjqeic2zRp8y', 'bucket.neo']\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}